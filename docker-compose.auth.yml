version: '3.4'

services:

  nginx-proxy:
    image: nginxproxy/nginx-proxy
    container_name: nginx-proxy
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - conf:/etc/nginx/conf.d
      - vhost:/etc/nginx/vhost.d
      - html:/usr/share/nginx/html
      - dhparam:/etc/nginx/dhparam
      - certs:/etc/nginx/certs:ro
      - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
      - default

  acme-companion:
    image: nginxproxy/acme-companion
    container_name: nginx-proxy-acme
    volumes_from:
      - nginx-proxy
    volumes:
      - certs:/etc/nginx/certs:rw
      - acme:/etc/acme.sh
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - default

  keycloak:
    build:
      context: authentication
      dockerfile: Dockerfile
    env_file:
      - .envs/.local/.env.auth
    volumes:
      - ./authentication/realms/enki-realm-export.json:/tmp/enki-realm-export.json
        # surcharge de config pour que le theme n'ait pas de cache et qu'on puisse bosser dessus
      - ./authentication/standalone-ha.xml:/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml
      - ./authentication/enki-theme/:/opt/jboss/keycloak/themes/enki-theme
    networks:
      - default
    ports:
    - "8080:8080"
  keycloak-db:
    image: postgres
    env_file:
      - .envs/.local/.env.auth
    networks:
      - default

networks:
  default:
    driver: bridge