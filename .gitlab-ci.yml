services:
  - name: docker.elastic.co/elasticsearch/elasticsearch:7.10.0
    alias: elasticsearch
    command: [ "bin/elasticsearch", "-Ediscovery.type=single-node" ]
  - name: minio/minio
    alias: minio
#
#  - name: postgres:latest
#    alias: postgres

variables:
  ELASTICSEARCH_URL: "http://elasticsearch:9200"
  ES_JAVA_OPTS: "-Xms512m -Xmx512m"
  POSTGRES_NAME: "postgres"
  POSTGRES_PORT: 5432
  POSTGRES_DB: "enki-tests"
  POSTGRES_USER: "postgres"
  POSTGRES_PASSWORD: "pg-password"
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"
  MINIO_ENDPOINT: "minio"
  MINIO_ACCESS_KEY: "MINIOACCESSKEY"
  MINIO_SECRET_KEY: "MINIO_SECRET_KEY"

stages:
  - install
  - build-test
  - deploy

cache:
  paths:
    - fronts/node_modules/
    - backend/venv/
    - .cache/pip
install-fronts-dependencies:
  image: node:latest
  stage: install
  script:
    - cd fronts
    - echo "Installing packages..."
    - npm install
  artifacts:
    paths:
      - fronts/node_modules/
  only:
    refs:
      - merge_requests
    changes:
      - fronts/*

install-backend-dependencies:
  image: python:3.8
  stage: install
  script:
    - cd backend
    - echo "Installing python env and requirements..."
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install -r requirements.dev.txt
    - pip install -e .
  only:
    refs:
      - merge_requests
    changes:
      - backend/*
  artifacts:
    paths:
      - backend/venv/

install-cisu-package-dependencies:
  image: python:3.8-alpine
  stage: install
  script:
    - cd cisu
    - echo "Installing python env and requirements..."
    - python3 -m venv venv
    - source venv/bin/activate
    - pip install --upgrade pip
    - pip install -r requirements.txt
    - pip install -r requirements.test.txt
    - pip install -e .
  artifacts:
    paths:
      - cisu/venv/
  only:
    refs:
      - merge_requests
    changes:
      - cisu/*



front-enki-build-and-test:
  image: node:latest
  stage: build-test
  script:
    - cd fronts
    - echo "Building enki front app..."
    # - npm run build enki
    # - echo "Testing enki front app..."
    # - npm test enki
  only:
    refs:
      - merge_requests
    changes:
      - fronts/*

back-build-and-test:
  image: python:3.8
  stage: build-test
  script:
    - cd backend
    - source venv/bin/activate
    - echo "Unit testing..."
    - pytest src/tests/unit
    - echo "Integration testing..."
    - pytest src/tests/integration
    - echo "Flask e2e testing..."
    - pytest src/tests/e2e
  only:
    refs:
      - merge_requests
    changes:
      - backend/*

cisu-build-and-test:
  image: python:3.8-alpine
  stage: build-test
  script:
    - cd cisu
    - source venv/bin/activate
    - echo "Unit testing..."
    - pytest tests/unit
  only:
    refs:
      - merge_requests
    changes:
      - cisu/*

#cisu-deploy-package:
#  stage: deploy
#  image: python:3.8-alpine
#  script:
#    - cd cisu
#    - cat $PYPIRC > /tmp/.pypirc
#    - sed -i 's/PYPI_TOKEN_TO_RELACE/$PYPI_TOKEN/' /tmp/.pypirc
#    - sed /tmp/.pypirc
#    - pip install twine
#    - python setup.py  bdist_wheel
#    - python -m twine upload --repository pypi dist/* --config-file /tmp/.pypirc
#  only:
#    refs:
#      - merge_requests
#    changes:
#      - cisu/*
