version: '3.4'

services:
  nginx:
    build:
      context: proxy
      dockerfile: Dockerfile
    ports:
      - "4000:4000"
    volumes:
      - ./front/dist/:/etc/nginx/html/dist/
      - ./proxy/data/nginx_app/:/etc/nginx/conf.d
    networks:
      - default
  api:
    build:
      context: backend
      dockerfile: Dockerfile
    command: flask run --host=0.0.0.0
    ports:
      - "5000:5000"
    env_file:
      - .envs/.local/.env.flaskenv
      - .envs/.local/.env.pg
      - .envs/.local/.env.minio
    volumes:
      - ./backend/src:/code/src
      - ./backend/tests:/code/tests
      - ./backend/jdd/xml_cisu:/jdd/xml_cisu
    networks:
      - default
      - enki_default

  postgres:
    image: mdillon/postgis
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .envs/.local/.env.pg
    volumes:
      - pg-data:/var/lib/postgresql/data
    networks:
      - default

  minio:
    image: minio/minio
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"
    expose:
      - "9000"
    env_file:
      - .envs/.local/.env.minio
    command: server data/
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - default
      - enki_default

volumes:
  minio-data:
  pg-data:

networks:
  default:
    driver: bridge
  enki_default:
    external: true